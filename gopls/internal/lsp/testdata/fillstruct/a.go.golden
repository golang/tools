-- suggestedfix_a_11_21 --
package fillstruct

import (
	"golang.org/lsptests/fillstruct/data"
)

type basicStruct struct {
	foo int
}

var _ = basicStruct{
	foo: 0,
} //@suggestedfix("}", "refactor.rewrite", "Fill")

type twoArgStruct struct {
	foo int
	bar string
}

var _ = twoArgStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type nestedStruct struct {
	bar   string
	basic basicStruct
}

var _ = nestedStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

var _ = data.B{} //@suggestedfix("}", "refactor.rewrite", "Fill")

-- suggestedfix_a_18_22 --
package fillstruct

import (
	"golang.org/lsptests/fillstruct/data"
)

type basicStruct struct {
	foo int
}

var _ = basicStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type twoArgStruct struct {
	foo int
	bar string
}

var _ = twoArgStruct{
	foo: 0,
	bar: "",
} //@suggestedfix("}", "refactor.rewrite", "Fill")

type nestedStruct struct {
	bar   string
	basic basicStruct
}

var _ = nestedStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

var _ = data.B{} //@suggestedfix("}", "refactor.rewrite", "Fill")

-- suggestedfix_a_25_22 --
package fillstruct

import (
	"golang.org/lsptests/fillstruct/data"
)

type basicStruct struct {
	foo int
}

var _ = basicStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type twoArgStruct struct {
	foo int
	bar string
}

var _ = twoArgStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type nestedStruct struct {
	bar   string
	basic basicStruct
}

var _ = nestedStruct{
	bar:   "",
	basic: basicStruct{},
} //@suggestedfix("}", "refactor.rewrite", "Fill")

var _ = data.B{} //@suggestedfix("}", "refactor.rewrite", "Fill")

-- suggestedfix_a_27_16 --
package fillstruct

import (
	"golang.org/lsptests/fillstruct/data"
)

type basicStruct struct {
	foo int
}

var _ = basicStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type twoArgStruct struct {
	foo int
	bar string
}

var _ = twoArgStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

type nestedStruct struct {
	bar   string
	basic basicStruct
}

var _ = nestedStruct{} //@suggestedfix("}", "refactor.rewrite", "Fill")

var _ = data.B{
	ExportedInt: 0,
} //@suggestedfix("}", "refactor.rewrite", "Fill")

